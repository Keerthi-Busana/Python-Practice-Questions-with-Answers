# -*- coding: utf-8 -*-
"""Pandas Practice

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18suSY91OlSQBKZ_tDGhYoqAqzWmlCxqG
"""

#Write a Pandas program to create and display a one-dimensional array-like
 #object containing an array of data using Pandas module.

import pandas as pd

df = pd.Series([2,3,4,5,6])

print(df)

#2 Write a Pandas program to convert a Panda module Series to Python list and it's type.

import pandas as pd

df = pd.Series([1,2,3,4,5])
ds = df.tolist()

print(ds)

#Write a Pandas program to add, subtract, multiple and divide two Pandas Series.

import pandas as pd

df1 = pd.Series([1,2,3,4])
df2 = pd.Series([2,3,4,5])

print(df1+df2)
print(df1-df2)
print(df1*df2)
print(df1/df2)

#4 Write a Pandas program to compare the elements of the two Pandas Series.

import pandas as pd

df1= pd.Series([1,2,3,4])
df2 = pd.Series([1,2,3,4])

print(df1 == df2)
print('They are equal')

#5 Write a Pandas program to convert a dictionary to a Pandas series.

import pandas as pd

dict = {'a': 100, 'b': 200, 'c': 300, 'd': 400, 'e': 800}
new = pd.Series(dict)

print(new)

# 6. Write a Pandas program to convert a NumPy array to a Pandas series. 

import numpy as np
import pandas as pd

new_array = np.array([1,2,3])
print('numpy array :', new_array)

new_series = pd.Series(new_array)
print('pandas series: ' , new_series)

#7. Write a Pandas program to change the data type of given a column or a Series.

import pandas as pd

values = pd.Series([100, 200, 'python', 300.12, 400])

change = pd.to_numeric(values, errors= 'coerce')

print(change)

#8. Write a Pandas program to convert the first import pandas as pd

import pandas as pd
data = {'col1': [1, 2, 3, 4, 7, 11], 'col2': [4, 5, 6, 9, 5, 0], 'col3': [7, 5, 8, 12, 1,11]}
df = pd.DataFrame(data)
print(df)
s1 = df.iloc[:,0]
print(s1)

#9 Write a Pandas program to convert a given Series to an array.

import numpy as np
import pandas as pd

#df = {'col_1': [100, 200, 'python', 300.12, 400]}
#new_col = pd.DataFrame(df)
#print(new_col)

new_series = pd.Series([100, 200, 'python', 300.12, 400])
print(new_series)

new_array = pd.array(new_series)
print('\n numpy array :', new_array)

#new_series = pd.Series(new_array)
#print('pandas series: ' , new_series)

#10. Write a Pandas program to convert Series of lists to one Series.

import pandas as pd

List1 = ['Red', 'Green', 'White']
List2 = ['Red', 'Black']
List3 = ['Yellow']

new_List =List1 + List2 + List3

print(new_List)

new_series = pd.Series(new_List)
print(new_series)

"""**Excersice 2 : Data Frames**"""

#2. Write a Pandas program to create and display a DataFrame from a specified dictionary data which has the inde

import pandas as pd

exam_data = { 'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
              'score': [12.5, 9, 16.5, 'np.nan', 9, 20, 14.5, 'np.nan', 8, 19],
              'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
              'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data= pd.DataFrame(exam_data, index = labels)
print(data)

#3. Write a Pandas program to display a summary of the basic information about a specified DataFrame and its data.

import pandas as pd

exam_data = { 'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
              'score': [12.5, 9, 16.5, 'np.nan', 9, 20, 14.5, 'np.nan', 8, 19],
              'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
              'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data= pd.DataFrame(exam_data, index = labels)
print(data)

data.info()

#4. Write a Pandas program to get the first 3 rows of a given DataFrame. Go to the editor
#Sample Python dictionary data and list labels:

#continuation

print(data.iloc[:3])

#5. Write a Pandas program to select the 'name' and 'score' columns from the following DataFrame.

print(data[['name', 'score']])

#6. Write a Pandas program to select the specified columns and rows from a given data frame
#Select 'name' and 'score' columns in rows 1, 3, 5, 6 from the following data frame.

#print(data.iloc[:3])
print(data[['name', 'score']].iloc[1:7:2])

print(data[['name', 'score']].iloc[6])

#7. Write a Pandas program to select the rows where the number of attempts in the examination is greater than 2. 

attempts_filter = data['attempts']>2

data = data.loc[attempts_filter,:]

data

#re-writing the program. 

import pandas as pd

exam_data = { 'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
              'score': [12.5, 9, 16.5, 'np.nan', 9, 20, 14.5, 'np.nan', 8, 19],
              'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
              'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data= pd.DataFrame(exam_data, index = labels)
print(data)

data.info()

#8. Write a Pandas program to count the number of rows and columns of a DataFrame.
data.shape

#9. Write a Pandas program to select the rows where the score is missing, i.e. is NaN

data.isnull()

#10 Write a Pandas program to select the rows the score is between 15 and 20 (inclusive)

data

print(data[data['score'].between(15, 20)])

import pandas as pd
import numpy as np

exam_data  = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
        'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
        'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data = pd.DataFrame(exam_data , index=labels)
print("Rows where score between 15 and 20 (inclusive):")
print(data[data['score'].between(15, 20)])

# 11 Write a Pandas program to select the rows where number of attempts in the examination is less than 2 and score greater than 15


import pandas as pd
import numpy as np

exam_data  = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
        'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
        'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data = pd.DataFrame(exam_data , index=labels)
print("number of attempts in the examination is less than 2 and score greater than 15:")

data_filter1 = data['attempts']< 2 
data_filter2 = data['score']>15
data_filter = data_filter1 & data_filter2
print(data[data_filter])

"""Pandas Series - Continuation"""

#11. Write a Pandas program to sort a given Series

import pandas as pd

data = pd.Series([1,0,3,4])
#df = pd.Series(data)
data.sort_values(ascending=True)

#12. Write a Pandas program to add some data to an existing Series

import pandas as pd

df1 = [1,2,3,4,5]
df2 = [2,4,6,8,10]
df3 = pd.Series(df1)
df4 = pd.Series(df2)

#print(df1)

#df3.append([df4])

#13. Write a Pandas program to create a subset of a given series based on value and condition.

n = 6
df3[df3 < n]

#14. Write a Pandas program to change the order of index of a given series.

total_series = pd.Series(df3, index = [1,2,3])

print(total_series)

#15 Write a Pandas program to create the mean and standard deviation of the data of a given Series.

standard_deviation = df3.std()
mean = df4.mean()

print( 'standard_deviation is: ', standard_deviation)
print('mean is:', mean)

#16. Write a Pandas program to get the items of a given series not present in another given series.

value = df3[~df3.isin(df4)]

print(value)

#17. Write a Pandas program to get the items which are not common of two given series.

value = df3[~df3.isin(df4)]

print(value)

#18. Write a Pandas program to compute the minimum, 25th percentile, median, 75th, and maximum of a given series.

print('min is :' , min(df3))
print('max is: ', max(df3))
print('median is :', df3.median)

#did not understand 25th and 75th percentile

#19. Write a Pandas program to calculate the frequency counts of each unique value of a given series.

df4.value_counts()

#20. Write a Pandas program to display most frequent value in a given series and replace everything else as 'Other' in the series.

import pandas as pd

#data = {'col1': [1, 2, 3, 4, 7, 11], 'col2': [4, 5, 6, 9, 5, 0], 'col3': [7, 5, 8, 12, 1,11]}
#df = pd.DataFrame(data)
#print(df)

import pandas as pd

exam_data = { 'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
              'score': [12.5, 9, 16.5, 'np.nan', 9, 20, 14.5, 'np.nan', 8, 19],
              'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
              'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

data= pd.DataFrame(exam_data, index = labels)
print(data)

data.info()



